---
import BaseLayout from '../layouts/BaseLayout.astro';
import TechItem from '../components/TechItem.astro';
import MobileNavigation from '../components/MobileNavigation.tsx';
import { TECHNOLOGIES } from '../config';
import Contributors from '../components/Contributors.astro';
import { formatPath } from "../lib/formatPath.ts";

const items = Astro.fetchContent('./kit/*.md');

const keywords = items.map((item) => item.keywords.split(',')).flat(10);

const technologies = TECHNOLOGIES.filter((tech) => {
  return keywords.includes(tech.key);
});

const sections = technologies.reduce((acc, tech) => {
  tech.tags.forEach((tag) => {
    if (!acc[tag]) {
      acc[tag] = [];
    }
    acc[tag].push(tech);
  });
  return acc;
}, {} as Record<string, any[]>);
---

<BaseLayout
  title="Frameworks - starter.dev"
  description="Lists technologies used through the starter.dev kit collection"
>
  <MobileNavigation sections={Object.keys(sections)} client:load />
  <div class="toggleDiv">
  <div
    class="grid grid-cols-12 gap-x-8 max-w-screen-2xl mx-auto bg dark:dark-bg"
  >
    <aside class="hidden lg:block col-span-3">
      <div
        class="pt-8 sticky top-0 border-r border-gray-400 dark:border-gray-700 min-h-[calc(100vh-120px)] overflow-y-auto"
      >
        <nav>
          <ul>
            {Object.keys(sections).map((name) => (
              <li>
                <a
                  href={`#${formatPath(name)}`}
                  class="t-dark dark:dark-t-light block py-2 px-4 hover:text-blue-500 dark:hover:text-blue-500 text-md font-sm my-4 border-r-2 border-transparent hover:border-brand-500 focus:text-blue-500 focus:dark:text-blue-500 focus:border-brand-500"
                >
                  {name}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      </div>
    </aside>
    <div class="col-span-12 lg:col-span-7 p-2 my-b-10 max-w-screen-2xl">
      {Object.entries(sections).map(([name, technologies]) => (
        <div class="my-12">
          <h2
            id={`${formatPath(name)}`}
            class="heading-6 t-dark dark:dark-t-light my-6 "
          >
            {name}
          </h2>
          <div class="flex flex-wrap items-center justify-start space-x-4">
            {technologies.map((tech) => (
              <a
                href={`/framework/${tech.key}`}
                class="group inline-block my-2"
              >
                <TechItem {...tech} />
              </a>
            ))}
          </div>
        </div>
      ))}
    </div>
  </div>
  <Contributors />
  </div>
</BaseLayout>
